{"version":3,"sources":["components/CreateStep.js","components/ShowSteps.js","config.js","components/JobDescription.js","components/EditJob.js","components/LoadPage.js","components/Navigation.js","components/MainPage.js","components/Footer.js","components/JobPreview.js","components/Landing.js","components/Profile.js","components/SearchJob.js","picture/magnifying-2681173_1920.png","picture/surprise copie.png","picture/error-2129569_1920.jpg","components/NotFound.js","App.js","index.js"],"names":["CreateStep","jobId","this","props","className","onSubmit","handleSubmitStep","name","type","placeholder","value","Component","ShowSteps","state","stepsArray","getSteps","steps","setState","dateFormatChange","date","split","reverse","length","handleDeleteStep","map","ele","description","onClick","_id","process","JobDescription","id","jobTitle","companyName","applicationDate","contactPerson","contactDetail","jobDescription","companyRating","applicationLink","sourceOfApplication","salary","interviewDate","jobLocation","editForm","showForm","getOneJob","match","params","axios","get","config","withCredentials","then","response","data","catch","err","console","log","handleEditChange","event","target","handleEditSubmit","preventDefault","patch","onChange","handleDeleteAllJobSteps","handleDeleteJob","EditJob","LoadPage","hasClass","classes","classToggle","onSignIn","clientId","CLIENT_ID","buttonText","onSuccess","googleSignIn","onFailure","errorGoogleSignIn","cookiePolicy","onSignUp","googleSignUp","unloggedUser","Navigation","Navbar","bg","variant","expand","to","Brand","Form","onSearch","FormControl","Button","Toggle","aria-controls","Collapse","Nav","user","onLogout","MainPage","initialDetails","onUnlogged","jobDetails","interviewCount","todayDate","Date","JSON","parse","stringify","firstName","single","style","textDecoration","JobPreview","singleJob","Landing","showPrev","processing","showPreview","loggedInUser","onDateFilter","oninterviewFilter","onSalarySort","Row","Col","DropdownButton","title","Dropdown","Item","detail","userId","toUpperCase","isJobPreview","onAdd","Profile","Redirect","SearchJob","filteredJobs","e","NotFound","src","Surprise","alt","notfound","App","logoutUser","fetchingUser","handleSearch","searchText","s","toLowerCase","filteredList","filter","includes","history","push","handleDateFilter","dateFilterJobs","sort","a","b","handleInterviewDate","interviewFilter","handleSalarySort","clearValues","Array","from","document","querySelectorAll","forEach","input","itemvalues","emailId","profileObj","email","givenName","lastName","familyName","post","error","method","url","tokenId","loggedIn","getInitialDetails","getStates","addJobDetails","newJobDetails","handleSignUp","password","handleSignIn","handleLogout","stepsId","delete","filteredSteps","step","job","handleEditJobDesc","handleUnloggedUser","directToSearch","exact","path","render","routeProps","toLogIn","component","Spinner","animation","role","withRouter","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d918f92.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass CreateStep extends Component {\n\n\n    render() {\n      let jobId = this.props.jobId\n\n        return (\n            <div>\n                <div className=\"card1\">\n                  <form onSubmit={this.props.handleSubmitStep} className=\"addStep\">\n                    <input className=\"un\" name=\"date\" type=\"date\" />\n                    <input className=\"un\" name=\"description\" type=\"text\" placeholder=\"Enter a step\" />\n                    <input type=\"hidden\" name=\"jobId\" value={jobId} />\n                    <button className=\"stepButton\" type=\"submit\">SUBMIT</button>\n                  </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateStep","import React, { Component } from 'react'\n\nclass ShowSteps extends Component {\n  \n  state = {\n    stepsArray: []\n  }\n\n getSteps = () => {\n    let steps = this.props.steps;\n\n    this.setState({\n      stepsArray: [...steps]\n    })\n\n }\n\n componentDidMount() {\n   this.getSteps()\n }\n\n componentDidUpdate() {\n   \n    if(this.props.steps.length !== this.state.stepsArray.length) {\n      this.setState({\n        stepsArray: [...this.props.steps]\n      })\n    }\n  }\n  \n  dateFormatChange = (date) => {\n    let newDate = date.split(\"T\", 1).reverse();\n    return newDate\n  }\n  \n  render() {\n    const {stepsArray} = this.state \n    const {handleDeleteStep, jobId} = this.props\n    \n      return (\n        <div>\n          \n            <div className=\"card1\">\n              <div className=\"scrollDown\">\n                { \n                    stepsArray.map((ele) => {  \n                      return (\n                        (ele.jobId === jobId) ?\n                          (<div>\n                             <div className=\"un\">\n                               <p>{ele.description} </p>\n                               <p>{ele.date}</p>\n                             </div>\n                               <button onClick={() => {handleDeleteStep(ele._id, jobId)}} className=\"deleteStep\">DELETE</button>\n                           </div>) : null\n                      )                                       \n                    })\n                     \n                }\n              </div>\n            </div>\n          \n          </div>\n      )\n  }\n}\n\nexport default ShowSteps","export default {\n  API_URL: process.env.REACT_APP_SERVER_URL,\n};\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport '../styles/JobDescription.css'\nimport CreateStep from './CreateStep'\nimport ShowSteps from './ShowSteps'\nimport config from '../config'\nclass JobDescription extends Component {\n  state = {\n    // oneJob: {}\n    id: \"\",\n    jobTitle: \"\",\n    companyName: \"\",\n    applicationDate: \"\",\n    contactPerson: \"\",\n    contactDetail: \"\",\n    jobDescription: \"\",\n    companyRating: \"\",\n    applicationLink: \"\",\n    sourceOfApplication: \"\",\n    salary: \"\",\n    interviewDate: \"\",\n    jobLocation: \"\",\n    editForm: false,\n  };\n\n  showForm = () => {\n    this.setState({ editForm: true });\n  };\n\n  getOneJob = () => {\n    let jobId = this.props.match.params.jobId;\n    axios\n      .get(`${config.API_URL}/api/home/${jobId}`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          // oneJob: response.data\n          id: response.data._id,\n          jobTitle: response.data.jobTitle,\n          companyName: response.data.companyName,\n          applicationDate: response.data.applicationDate,\n          contactPerson: response.data.contactPerson,\n          contactDetail: response.data.contactDetail,\n          jobDescription: response.data.jobDescription,\n          companyRating: response.data.companyRating,\n          applicationLink: response.data.applicationLink,\n          sourceOfApplication: response.data.sourceOfApplication,\n          salary: response.data.salary,\n          interviewDate: response.data.interviewDate,\n          jobLocation: response.data.jobLocation,\n        });\n      })\n      .catch((err) => {\n        console.log(\"Fetching data failed\", err);\n      });\n  };\n\n  handleEditChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value,\n        // editForm: false\n      },\n      () => {\n        // console.log(this.state.jobTitle);\n      }\n    );\n  };\n\n  handleEditSubmit = (event) => {\n    event.preventDefault();\n    let jobId = this.state.id;\n\n    let jobTitle = this.state.jobTitle;\n    let companyName = this.state.companyName;\n    let applicationDate = this.state.applicationDate;\n    let contactPerson = this.state.contactPerson;\n    let contactDetail = this.state.contactDetail;\n    let jobDescription = this.state.jobDescription;\n    let companyRating = this.state.companyRating;\n    let applicationLink = this.state.applicationLink;\n    let sourceOfApplication = this.state.sourceOfApplication;\n    let salary = this.state.salary;\n    let interviewDate = this.state.interviewDate;\n    let jobLocation = this.state.jobLocation;\n\n    // console.log(editedJob, jobId);\n    axios\n      .patch(\n        `${config.API_URL}/api/home/${jobId}`,\n        {\n          jobTitle,\n          companyName,\n          applicationDate,\n          contactPerson,\n          contactDetail,\n          jobDescription,\n          companyRating,\n          applicationLink,\n          sourceOfApplication,\n          salary,\n          interviewDate,\n          jobLocation,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        this.setState({\n          jobTitle: response.data.jobTitle,\n          companyName: response.data.companyName,\n          applicationDate: response.data.applicationDate,\n          contactPerson: response.data.contactPerson,\n          contactDetail: response.data.contactDetail,\n          jobDescription: response.data.jobDescription,\n          companyRating: response.data.companyRating,\n          applicationLink: response.data.applicationLink,\n          sourceOfApplication: response.data.sourceOfApplication,\n          salary: response.data.salary,\n          interviewDate: response.data.interviewDate,\n          jobLocation: response.data.jobLocation,\n          editForm: false,\n        });\n      })\n      .catch((err) => {\n        console.log(\"Fetching data failed\", err);\n      });\n  };\n\n  componentDidMount() {\n    this.getOneJob();\n  }\n\n  dateFormatChange = (date) => {\n    let newDate = date.split(\"T\", 1).reverse();\n    return newDate;\n  };\n\n  render() {\n    const {\n      id,\n      jobTitle,\n      companyName,\n      applicationDate,\n      contactPerson,\n      contactDetail,\n      jobDescription,\n      companyRating,\n      applicationLink,\n      sourceOfApplication,\n      salary,\n      interviewDate,\n      jobLocation,\n    } = this.state;\n    console.log(interviewDate);\n    return (\n      <div>\n        <div className=\"topLeft\">\n          <div className=\"mainContainer\">\n            {this.state.editForm ? (\n              <div className=\"leftSide\">\n                <form onSubmit={this.handleEditSubmit}>\n                  <input\n                    onChange={this.handleEditChange}\n                    value={jobTitle}\n                    name=\"jobTitle\"\n                    type=\"text\"\n                    placeholder=\"Job Title\"\n                  />\n                  <input\n                    onChange={this.handleEditChange}\n                    value={companyName}\n                    name=\"companyName\"\n                    type=\"text\"\n                    placeholder=\"Company\"\n                  />\n                  <br></br>\n                  <label>\n                    <strong>Application Date</strong>\n                  </label>\n                  <input\n                    onChange={this.handleEditChange}\n                    value={applicationDate}\n                    type=\"date\"\n                    id=\"start\"\n                    name=\"applicationDate\"\n                  />\n                  <br></br>\n                  <input\n                    value={contactPerson}\n                    onChange={this.handleEditChange}\n                    name=\"contactPerson\"\n                    type=\"text\"\n                    placeholder=\"Contact Person\"\n                  />\n                  <input\n                    value={contactDetail}\n                    onChange={this.handleEditChange}\n                    name=\"contactDetail\"\n                    type=\"text\"\n                    placeholder=\"Contact detail\"\n                  />\n                  <input\n                    value={jobDescription}\n                    onChange={this.handleEditChange}\n                    name=\"jobDescription\"\n                    type=\"text\"\n                    placeholder=\"Job Description\"\n                  />\n                  {/* <input name=\"companyRating\" type=\"text\" placeholder=\"Company Rating\"/> */}\n                  <input\n                    value={applicationLink}\n                    onChange={this.handleEditChange}\n                    name=\"applicationLink\"\n                    type=\"text\"\n                    placeholder=\"Application Link\"\n                  />\n                  <input\n                    value={sourceOfApplication}\n                    onChange={this.handleEditChange}\n                    name=\"sourceOfApplication\"\n                    type=\"text\"\n                    placeholder=\"Source of Application\"\n                  />\n                  <input\n                    value={salary}\n                    onChange={this.handleEditChange}\n                    name=\"salary\"\n                    type=\"number\"\n                    placeholder=\"Salary\"\n                  />\n                  <br></br>\n                  <label>\n                    <strong>Interview Date</strong>\n                  </label>\n                  <input\n                    type=\"date\"\n                    id=\"start\"\n                    value={interviewDate}\n                    onChange={this.handleEditChange}\n                    name=\"interviewDate\"\n                  />\n                  <br></br>\n                  <input\n                    value={jobLocation}\n                    onChange={this.handleEditChange}\n                    name=\"jobLocation\"\n                    type=\"text\"\n                    placeholder=\"Job Location\"\n                  />\n                  <br></br>\n                  <button className=\"stepButton\" type=\"submit\">\n                    SUBMIT\n                  </button>\n                </form>\n              </div>\n            ) : (\n              <div className=\"leftSide\">\n                <div>\n                  <h1>{jobTitle}</h1>\n                  <h3>{companyName}</h3>\n                  <h6>{applicationDate ? this.dateFormatChange(applicationDate):null}</h6>\n                </div>\n                <div>\n                  <h6>Job description:</h6>\n                  <p>{jobDescription}</p>\n                </div>\n                <div>\n                  <h6>Point of contact:</h6>\n                  <p>{contactPerson}</p>\n                </div>\n                <div>\n                  <h6>Contact Detail:</h6>\n                  <p>{contactDetail}</p>\n                </div>\n                <div>\n                  <h6>Rate your interview process:</h6>\n                </div>\n                <div>\n                  <h6>Application link:</h6>\n                  <p>{applicationLink}</p>\n                </div>\n                <div>\n                  <h6>Source of application:</h6>\n                  <p>{sourceOfApplication}</p>\n                </div>\n                <div>\n                  <h6>Salary:</h6>\n                  <p>{salary}</p>\n                </div>\n              </div>\n            )}\n\n            <div className=\"rightSide\">\n              <div>\n                <h6>Interview date:</h6>\n                <p>{interviewDate ? this.dateFormatChange(interviewDate): null}</p>\n              </div>\n              <div>\n                <h6>Job location:</h6>\n                <p>{jobLocation}</p>\n              </div>\n              <CreateStep\n                handleSubmitStep={this.props.handleSubmitStep}\n                jobId={id}\n              />\n              {!this.props.steps.length ? null : (\n                <div>\n                  <ShowSteps\n                    handleDeleteStep={this.props.handleDeleteStep}\n                    steps={this.props.steps}\n                    jobId={id}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"editJobDesc\">\n            <button\n              onClick={() => {\n                this.showForm();\n              }}\n              className=\"submit1\"\n            >\n              EDIT\n            </button>\n            <button\n              onClick={() => {\n                this.props.handleDeleteAllJobSteps(id);\n                this.props.handleDeleteJob(id);\n              }}\n              className=\"submit1\"\n            >\n              DELETE\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JobDescription","import React, { Component } from 'react'\nimport axios from 'axios'\nimport config from '../config'\n\n\nclass EditJob extends Component {\n\n    state = {\n        jobDescription: {}\n    }\n\n    componentDidMount(){\n        let jobDescriptionId = this.props.match.params.jobId\n        axios.get(`${config.API_URL}/api/home/${jobId}`)\n          .then((response) => {\n              this.setState ({\n                  jobDescription: response.data\n              })\n          })\n          .catch(() => {\n              console.log('Detail fetch failed')\n          })\n    }\n\n    \n\n\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\nexport default EditJob","import React, { Component } from 'react'\nimport '../styles/LoadPage.scss'\nimport {Link} from 'react-router-dom'\nimport GoogleLogin from 'react-google-login';\n\n\nclass LoadPage extends Component {\n\n    \n    state = {\n        hasClass: true,\n        classes: \"cont\"\n    }\n\n    classToggle = () => {    \n        this.state.hasClass ? this.setState({ classes: \"cont s--signup\", hasClass: false}) : this.setState({ classes: \"cont\", hasClass: true})\n    }\n\n    render() {\n        return (\n          <div className=\"landing-main\">\n            <div className={this.state.classes}>\n              <div className=\"form sign-in\">\n                <h2>Welcome back,</h2>\n                <form onSubmit={this.props.onSignIn}>\n                  <label className=\"inLabels\">\n                    <span>Email</span>\n                    <input name=\"emailId\" type=\"email\" />\n                  </label>\n                  <label className=\"inLabels\">\n                    <span>Password</span>\n                    <input name=\"password\" type=\"password\" />\n                  </label>\n                  <button type=\"submit\" className=\"submit\">\n                    Sign In\n                  </button>\n                </form>\n                {/* <button type=\"button\" className=\"fb-btn\">Connect with <span>Google</span></button> */}\n                <GoogleLogin \n                      clientId={`${process.env.CLIENT_ID}`}\n                      buttonText=\"Login\"\n                      onSuccess={this.props.googleSignIn}\n                      onFailure={this.props.errorGoogleSignIn}\n                      cookiePolicy={'single_host_origin'}\n                  />\n              </div>\n\n              <div className=\"sub-cont\">\n                <div className=\"img\">\n                  <div className=\"img__text m--up\">\n                    <h2>New here?</h2>\n                    <p>Sign up and manage your interviews!</p>\n                  </div>\n                  <div className=\"img__text m--in\">\n                    <h2>One of us?</h2>\n                    <p>If you already have an account, just sign in!</p>\n                  </div>\n                  <div onClick={this.classToggle} className=\"img__btn\">\n                    <span className=\"m--up\">Sign Up</span>\n                    <span className=\"m--in\">Sign In</span>\n                  </div>\n                </div>\n                <div className=\"form sign-up\">\n                  <h2>Time to manage your interview Schedules,</h2>\n                  <form onSubmit={this.props.onSignUp}>\n                    <label className=\"inLabels\">\n                      <span>First Name</span>\n                      <input name=\"firstName\" type=\"text\" />\n                    </label>\n                    <label className=\"inLabels\">\n                      <span>Last Name</span>\n                      <input name=\"lastName\" type=\"text\" />\n                    </label>\n                    <label className=\"inLabels\">\n                      <span>Email</span>\n                      <input name=\"emailId\" type=\"email\" />\n                    </label>\n                    <label className=\"inLabels\">\n                      <span>Password</span>\n                      <input name=\"password\" type=\"password\" />\n                    </label>\n                    <button type=\"submit\" className=\"submit\">\n                      Sign Up\n                    </button>\n                  </form>\n                  {/* <button type=\"button\" className=\"fb-btn\">Join with <span>Google</span></button> */}\n                  \n                  <GoogleLogin \n                      clientId={`${process.env.CLIENT_ID}`}\n                      buttonText=\"SignUp\"\n                      onSuccess={this.props.googleSignUp}\n                      onFailure={this.props.googleSignUp}\n                      cookiePolicy={'single_host_origin'}\n                  />\n                 \n                </div>\n              </div>\n            </div>\n\n            {/* <a rel=\"noreferrer\" href=\"https://dribbble.com/shots/3306190-Login-Registration-form\" target=\"_blank\" className=\"icon-link\">\n                <img src=\"http://icons.iconarchive.com/icons/uiconstock/socialmedia/256/Dribbble-icon.png\" alt=\"\" />\n                </a>\n                <a rel=\"noreferrer\" href=\"https://twitter.com/NikolayTalanov\" target=\"_blank\" className=\"icon-link icon-link--twitter\">\n                <img src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/twitter-128.png\" alt=\"\" />\n                </a> */}\n            <div>\n              {this.props.unloggedUser ? <h1>Please Log in First</h1> : null}\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default LoadPage","import React, { Component } from 'react'\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\nimport {Link} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Navigation extends Component {\n    render() {\n        return (\n            <div >\n                <Navbar id=\"navBar\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                    <Link to=\"/\">\n                    <Navbar.Brand className=\"navigation-brand\">interVIEWER</Navbar.Brand>\n                    </Link>\n                        <Form className=\"searchBar\" onSubmit={this.props.onSearch}>\n                            <FormControl type=\"text\" name=\"s\" placeholder=\"Search for job\" className=\"mr-sm-2\" />\n                            <Button className=\"searchButton\" type=\"submit\" variant=\"outline-info\">Search</Button>\n                        </Form>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"ml-auto navigation-links\"> \n                            <Link className=\"linkTo\" to=\"/about\">About</Link>\n                            {\n                                this.props.user ? (\n                                    <div className=\"conditionalNav\">\n                                    <Link className=\"linkTo\" to=\"/dashboard\">Dashboard</Link>\n                                    </div>\n                                    ) : null\n                            }  \n                            {\n                                this.props.user ? (\n                                    <div className=\"conditionalNav\">\n                                    <Link className=\"linkTo\" to=\"/profile\">Profile</Link>  \n                                    </div>\n                                    ) : null\n                            }\n                            {\n                                this.props.user ? (\n                                    <div className=\"conditionalNav\">\n                                    <Link className=\"linkTo\" onClick={this.props.onLogout}>Logout</Link>\n                                    </div>\n                                    ) : null\n                            }  \n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Navigation","import { Navbar, Nav  } from 'react-bootstrap';\nimport React, { Component } from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport '../styles/MainPage.css'\n\n//import axios from 'axios';\n//import config from '../config'\n\nclass MainPage extends Component {\n\n    componentDidMount() {\n        this.props.initialDetails()\n    }\n\n\n\n    render() {\n        \n\n\n        if (!this.props.user) {\n            this.props.onUnlogged()\n            return <Redirect to={'/'}  />\n        }\n        // const { logoutUser } = this.props;\n        const {jobDetails, user} = this.props\n        \n\n        let interviewCount = 0\n        let todayDate = new Date()\n        todayDate = JSON.parse(JSON.stringify(todayDate))\n        return (\n            <div>\n              <div className=\"mainContainer\">\n                <div className=\"centralCard\">\n                  <div className=\"welcome\">\n                    <h1>Welcome {user.firstName} !</h1>\n                  </div>\n                  <div className=\"welcome\">\n                    <h3>You have applied to {jobDetails.length} jobs</h3>\n                  </div>  \n                  <div className=\"welcome\">\n                  {\n                        jobDetails.map((single) => {\n                            if(single.interviewDate){\n                                if(single.interviewDate >= todayDate){\n                                    interviewCount++\n                                    console.log(single.interviewDate)\n                                }\n                            }\n                        })\n                    }\n                    <h3>You have {interviewCount} upcoming interviews</h3>\n                  </div>\n                </div>\n              </div>\n                 <div className=\"linkButton\">\n                   <Link style={{ textDecoration: 'none' }} to=\"/dashboard\">\n                    <button className=\"goTo\">DASHBOARD</button>\n                   </Link>\n                   <Link style={{ textDecoration: 'none' }} to=\"/profil\">\n                    <button className=\"goTo\">PROFIL</button>\n                   </Link>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default MainPage","import React, { Component } from 'react'\nimport '../styles/Footer.css'\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"footer-main\">\n                    <div >Footer Content</div>\n                    <div >Links-1</div>\n                    <div >Links-2</div>\n                </div>\n                <div className=\"copy-right\">Copyright place</div>\n            </div>\n        )\n    }\n}\n\nexport default Footer","import axios from 'axios'\nimport React, { Component } from 'react'\nimport config from \"../config\";\nimport { Route, Link } from \"react-router-dom\";\n\n\nclass JobPreview extends Component {\n  state = {\n    singleJob: {},\n  };\n\n  singleJob = () => {\n    let jobId = this.props.match.params.jobId;\n    axios\n      .get(`${config.API_URL}/api/dashboard/${jobId}`, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        this.setState({\n          singleJob: response.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"Fetching data failed\", err);\n      });\n  };\n  componentDidMount() {\n    this.singleJob();\n  }\n\n  componentDidUpdate() {\n    let jobId = this.props.match.params.jobId;\n    if (this.state.singleJob._id !== jobId) {\n      this.singleJob();\n    }\n  }\n  dateFormatChange = (date) => {\n    let newDate = date.split(\"T\", 1).reverse();\n    return newDate;\n  };\n\n  render() {\n    const {\n      singleJob: {\n        companyName,\n        applicationDate,\n        jobTitle,\n        contactPerson,\n        contactDetail,\n        _id,\n      },\n    } = this.state;\n    return (\n      <div className=\"card3\">\n        <div>\n          <div>\n            <h2>{companyName}</h2>\n            <h3>{jobTitle}</h3>\n            <h5>{applicationDate ?this.dateFormatChange(applicationDate):null}</h5>\n            <h5>{contactPerson}</h5>\n            <h5>{contactDetail}</h5>\n          </div>\n        </div>\n        <div className=\"detailsButton\">\n              <Link style={{ textDecoration: 'none' }} to={`/home/${_id}`}>\n                <button className=\"submit2\">DETAILS / UPDATE</button>\n              </Link>\n            </div>\n      </div>\n    );\n  }\n}\n\nexport default JobPreview;","import React, { Component } from \"react\";\nimport { Row, Container, Col, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport '../styles/Landing.css'\nimport JobPreview from './JobPreview'\n\nclass Landing extends Component {\n\n  state = {\n    showPrev: false,\n    processing: true\n  }\n\n  showPreview = () => {\n    this.setState({\n      showPrev: true\n    })\n  }\n\n  render() {\n    if (!this.props.loggedInUser) {\n      return <Redirect to={\"/\"} />;\n    }\n    const { jobDetails } = this.props;\n\n    if(!this.props.loggedInUser) {\n      return <Redirect to=\"/\" />\n    }\n\n    const { onDateFilter, oninterviewFilter, onSalarySort } = this.props;\n    \n    return (\n      <div>\n       <div className=\"mainContainer\">\n        <div className=\"leftSide\">\n          <Row>\n            <Col>\n             <div className=\"card2\">\n               <div className=\"topTitle\">\n               <h1>Job Offers</h1>\n                <div>\n                 <DropdownButton id=\"dropdown-basic-button\" title=\"SORT BY\">\n                  <Dropdown.Item onClick={onDateFilter}>Application Date</Dropdown.Item>\n                  <Dropdown.Item onClick={oninterviewFilter}>Interview Date</Dropdown.Item>\n                  <Dropdown.Item onClick={onSalarySort}>Salary</Dropdown.Item>\n                 </DropdownButton>\n                </div>\n               </div>\n             <div className=\"scrollDown1\">\n                {jobDetails.map((detail) => {\n                  if (detail.userId == this.props.loggedInUser?._id) {\n                    return (\n                      <div key={detail._id}>\n                        <Link to={`/dashboard/${detail._id}`}>\n                          <div className=\"un\">\n                            {detail.jobTitle}\n                            <br></br>\n                            {detail.companyName.toUpperCase()}\n                          </div>\n                        </Link>\n                      </div>\n                    );\n                  }\n                })}\n             </div>\n             </div>\n            </Col>\n          </Row>\n          <div>\n            {this.props.isJobPreview && <JobPreview {...this.props}/>}\n          </div>\n        </div>\n        <div className=\"rightSide\">\n            <Col>\n              <form onSubmit={this.props.onAdd}>\n                <input name=\"jobTitle\" type=\"text\" placeholder=\"Job Title\" />\n                <input name=\"companyName\" type=\"text\" placeholder=\"Company\" />\n                <br></br>\n                <label>\n                  <strong>Application Date</strong>\n                </label>\n                <input type=\"date\" id=\"start\" name=\"applicationDate\" />\n                <br></br>\n                <input\n                  name=\"contactPerson\"\n                  type=\"text\"\n                  placeholder=\"Contact Person\"\n                />\n                <input\n                  name=\"contactDetail\"\n                  type=\"text\"\n                  placeholder=\"Contact detail\"\n                />\n                <input\n                  name=\"jobDescription\"\n                  type=\"text\"\n                  placeholder=\"Job Description\"\n                />\n                {/* <input name=\"companyRating\" type=\"text\" placeholder=\"Company Rating\"/> */}\n                <input\n                  name=\"applicationLink\"\n                  type=\"text\"\n                  placeholder=\"Application Link\"\n                />\n                <input\n                  name=\"sourceOfApplication\"\n                  type=\"text\"\n                  placeholder=\"Source of Application\"\n                />\n                <input name=\"salary\" type=\"number\" placeholder=\"Salary\" />\n                <br></br>\n                <label>\n                  <strong>Interview Date</strong>\n                </label>\n                <input type=\"date\" id=\"start\" name=\"interviewDate\" />\n                <br></br>\n                <input\n                  name=\"jobLocation\"\n                  type=\"text\"\n                  placeholder=\"Job Location\"\n                />\n                <br></br>\n                <div className=\"formSubmit\">\n                <button className=\"submit2\" type=\"submit\">SUBMIT</button>\n                </div>\n                \n              </form>\n            </Col>\n        </div>\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react'\n\nexport default class Profile extends Component {\n\n\n\n\n\n\n    render() {\n        if (!this.props.user) {\n          return <Redirect to={\"/\"} />;\n        }\n        const {user}=this.props\n        return (\n            <div>\n                <h1>Name: {user.firstName}</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport loupe from \"../picture/magnifying-2681173_1920.png\";\nimport \"../styles/SearchJob.css\"\n\nexport default class SearchJob extends Component {\n    render() {\n        const { filteredJobs } = this.props\n        console.log(filteredJobs)\n        return (\n            <div>\n                {filteredJobs.length ?\n                    filteredJobs.map((e) => {\n                        return  (\n                          <Link style={{ textDecoration: 'none' }} to={`/home/${e._id}`}>\n                            <div>\n                              {e.companyName}\n                              {e.jobTitle}\n                            </div>\n                          </Link>\n                        )\n                    }):<div>No Jobs exist with your given Input</div>\n                }\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/magnifying-2681173_1920.78cb9f68.png\";","export default __webpack_public_path__ + \"static/media/surprise copie.384467ad.png\";","export default __webpack_public_path__ + \"static/media/error-2129569_1920.23e59617.jpg\";","import React, { Component } from 'react'\nimport Surprise from \"../picture/surprise copie.png\"\nimport notfound from \"../picture/error-2129569_1920.jpg\"\nimport \"../styles/Notfound.css\"\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"notFound\">\n                    <div className=\"surprise\">\n                    <img src={Surprise} alt=\"You know who\"/>\n                    </div>\n                    <div className=\"surprise\">\n                    <img src={notfound} alt=\"You know who\"/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport JobDescription from './components/JobDescription'\nimport EditJob from './components/EditJob'\nimport CreateStep from './components/CreateStep'\nimport ShowSteps from './components/ShowSteps'\nimport config from './config'\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport LoadPage from './components/LoadPage'\nimport Navigation from './components/Navigation';\nimport axios from 'axios';\nimport MainPage from './components/MainPage';\nimport Footer from './components/Footer';\nimport Landing from \"./components/Landing\";\nimport JobPreview from './components/JobPreview';\nimport {Redirect} from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport Profile from \"./components/Profile\";\nimport SearchJob from \"./components/SearchJob\";\nimport NotFound from \"./components/NotFound\"\n\n\nclass App extends Component {\n  state = {\n    jobDetails: [],\n    loggedInUser: null,\n    steps: [],\n    logoutUser: false,\n    fetchingUser: false,\n    unloggedUser: false,\n    filteredJobs: []\n  };\n\n  handleSearch = (event) => {\n    event.preventDefault()\n    const {jobDetails}=this.state\n    let searchText = event.target.s.value.toLowerCase()\n    let filteredList = jobDetails.filter((single) => {\n      return (\n        single.companyName.toLowerCase().includes(searchText) ||\n        single.jobTitle.toLowerCase().includes(searchText)\n      );\n    })\n    this.setState({\n      filteredJobs: filteredList,\n    }, () => {\n      this.props.history.push(\"/search\");\n    });\n  }\n  handleDateFilter = () => {\n    const { jobDetails } = this.state;\n    let clonedJobs = jobDetails.reverse();\n    let dateFilterJobs = clonedJobs.sort(\n      (a, b) => new Date(b.applicationDate) - new Date(a.applicationDate)\n    );\n    this.setState({\n      jobDetails: dateFilterJobs,\n    });\n  };\n  handleInterviewDate = () => {\n    const { jobDetails } = this.state;\n    let clonedJobs = jobDetails.reverse();\n    let interviewFilter = clonedJobs.sort((a, b) =>\n      !a.interviewDate\n        ? 999999\n        : new Date(a.interviewDate) - new Date(b.interviewDate)\n    );\n    this.setState({\n      jobDetails: interviewFilter,\n    });\n  };\n  handleSalarySort = () => {\n    const { jobDetails } = this.state;\n    let clonedJobs = jobDetails\n    let dateFilterJobs = clonedJobs.sort((a, b) => b.salary - a.salary\n    );\n    this.setState({\n      jobDetails: dateFilterJobs,\n    });\n  };\n  clearValues = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      (input) => (input.value = \"\")\n    );\n    this.setState({\n      itemvalues: [{}],\n    });\n  };\n\n  googleSignUp = (event) => {\n    let user = {\n      emailId: event.profileObj.email,\n      firstName: event.profileObj.givenName,\n      lastName: event.profileObj.familyName,\n    };\n  \n    axios\n      .post(`${config.API_URL}/api/google/auth`, user, { withCredentials: true })\n      .then((response) => {\n       \n        this.setState(\n          {\n            loggedInUser: response.data,\n          },\n          () => {\n            this.props.history.push(\"/home\");\n          }\n        );\n      })\n      .catch((err) => {\n        this.setState({\n          error: err.response.data,\n        });\n      });\n  }\n\n  errorGoogleSignIn = (event) => {\n\n  }\n\n  googleSignIn = (event) => {\n    \n    // axios\n    //   .post(`${config.API_URL}/api/google/signin`, user, { withCredentials: true })\n    //   .then((response) => {\n      \n    //     this.setState(\n    //       {\n    //         loggedInUser: response.data,\n    //       },\n    //       () => {\n    //         this.props.history.push(\"/home\");\n    //       }\n    //     );\n    //   })\n    //   .catch((err) => {\n    //     console.log(\"Something went wrong\", err);\n    //   });\n\n    axios({\n      method: \"POST\",\n      url: `${config.API_URL}/api/google/signin`,\n      data: {tokenId: event.tokenId},\n      withCredentials: true \n    }).then((response) => {\n      \n      this.setState(\n        {\n          loggedInUser: response.data,\n        },\n        () => {\n          this.props.history.push(\"/home\");\n        }\n      );\n\n    }).catch(() => {\n      console.log(\"Something went wrong\", err);\n    })\n  }\n\n  loggedIn = () => {\n    axios\n      .get(`${config.API_URL}/api/user`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          loggedInUser: response.data,\n          fetchingUser: true,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          fetchingUser: true,\n        });\n      });\n  };\n  getInitialDetails = () => {\n    axios\n      .get(`${config.API_URL}/api/dashboard`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          jobDetails: response.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"Fetching data failed\", err);\n      });\n  };\n  getStates = () => {\n    axios\n      .get(`${config.API_URL}/api/home/steps`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          steps: [...response.data],\n        });\n      })\n      .catch((err) => {\n        console.log(\"Fetching data failed\", err);\n      });\n  };\n  addJobDetails = (event) => {\n    event.preventDefault();\n    let newJobDetails = {\n      jobTitle: event.target.jobTitle.value,\n      companyName: event.target.companyName.value,\n      applicationDate: event.target.applicationDate.value,\n      contactPerson: event.target.contactPerson.value,\n      contactDetail: event.target.contactDetail.value,\n      jobDescription: event.target.jobDescription.value,\n      // companyRating: event.target.companyRating.value,\n      applicationLink: event.target.applicationLink.value,\n      sourceOfApplication: event.target.sourceOfApplication.value,\n      salary: event.target.salary.value,\n      interviewDate: event.target.interviewDate.value,\n      jobLocation: event.target.jobLocation.value,\n    };\n    // console.log(event.target.applicationDate.value);\n    axios\n      .post(`${config.API_URL}/api/create`, newJobDetails, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        this.setState(\n          {\n            jobDetails: [...this.state.jobDetails, response.data],\n          },\n          () => {\n            this.clearValues();\n          }\n        );\n      })\n      .catch(() => {\n        console.log(\"Fetching Failed!!!\");\n      });\n  };\n  handleSignUp = (event) => {\n    event.preventDefault();\n    let user = {\n      emailId: event.target.emailId.value,\n      password: event.target.password.value,\n      firstName: event.target.firstName.value,\n      lastName: event.target.lastName.value,\n    };\n\n    axios\n      .post(`${config.API_URL}/api/signup`, user)\n      .then((response) => {\n        this.setState(\n          {\n            loggedInUser: response.data,\n          },\n          () => {\n            this.props.history.push(\"/home\");\n            console.log(\"Sign in successful\");\n          }\n        );\n      })\n      .catch((err) => {\n        this.setState({\n          error: err.response.data,\n        });\n      });\n  };\n  handleSignIn = (event) => {\n    event.preventDefault();\n    let user = {\n      emailId: event.target.emailId.value,\n      password: event.target.password.value,\n    };\n\n    axios\n      .post(`${config.API_URL}/api/signin`, user, { withCredentials: true })\n      .then((response) => {\n        // console.log(response.data);\n\n        this.setState(\n          {\n            loggedInUser: response.data,\n          },\n          () => {\n            this.props.history.push(\"/home\");\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\", err);\n      });\n  };\n  handleLogout = () => {\n    axios\n      .post(`${config.API_URL}/api/logout`, {}, { withCredentials: true })\n      .then(() => {\n        this.setState(\n          {\n            loggedInUser: null,\n            jobDetails: [],\n            steps: [],\n          },\n          () => {\n            this.props.history.push(\"/\");\n          }\n        );\n      })\n      .catch(() => {});\n  };\n  handleSubmitStep = (event) => {\n    event.preventDefault();\n    let date = event.target.date.value;\n    let description = event.target.description.value;\n    let jobId = event.target.jobId.value;\n\n    axios\n      .post(\n        `${config.API_URL}/api/home/create-steps`,\n        {\n          date: date,\n          description: description,\n          jobId: jobId,\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        this.setState(\n          {\n            steps: [response.data, ...this.state.steps],\n          },\n          () => {\n            this.clearValues();\n            this.props.history.push(`/home/${response.data.jobId}`);\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"create failed\", err);\n      });\n  };\n  handleDeleteStep = (stepsId, jobId) => {\n    axios\n      .delete(`${config.API_URL}/api/home/${stepsId}`, {\n        withCredentials: true,\n      })\n      .then(() => {\n        let filteredSteps = this.state.steps.filter((step) => {\n          return step._id !== stepsId;\n        });\n        this.setState(\n          {\n            steps: filteredSteps,\n          },\n          () => {\n            this.props.history.push(`/home/${jobId}`);\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"delete failed\", err);\n      });\n  };\n  handleDeleteAllJobSteps = (jobId) => {\n    axios.delete(`${config.API_URL}/api/home/steps/${jobId}`, { withCredentials: true })\n      .then(() => {\n        let filteredSteps = this.state.steps.filter((step) => {\n          return step.jobId !== jobId;\n        });\n        this.setState({\n          steps: filteredSteps,\n        });\n      })\n      .catch((err) => {\n        console.log(\"delete failed\", err);\n      });\n  };\n  handleDeleteJob = (jobId) => {\n    axios\n      .delete(`${config.API_URL}/api/home/job/${jobId}`, {\n        withCredentials: true,\n      })\n      .then(() => {\n        let filteredJobs = this.state.jobDetails.filter((job) => {\n          return job._id !== jobId;\n        });\n        this.setState(\n          {\n            jobDetails: filteredJobs,\n          },\n          () => {\n            this.props.history.push(`/dashboard`);\n          }\n        );\n      })\n      .catch((err) => {\n        console.log(\"delete failed\", err);\n      });\n  };\n  componentDidMount() {\n    this.getStates();\n    this.getInitialDetails();\n    if (!this.state.loggedInUser) {\n      this.loggedIn();\n    }\n  }\n  handleEditJobDesc = (jobId) => {\n    axios.patch(`${config.API_URL}/api/home/steps/${jobId}`);\n  };\n  handleUnloggedUser = () => {\n    this.setState({\n      unloggedUser: true,\n    });\n  };\n\n  render() {\n    const { jobDetails, loggedInUser, logoutUser, unloggedUser,filteredJobs } = this.state;\n    if (!this.state.fetchingUser) {\n      return (\n        <div>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Navigation user={loggedInUser} directToSearch={this.directToSearch} onSearch={this.handleSearch} onLogout={this.handleLogout} />\n        {\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(routeProps) => {\n                return !loggedInUser ? (\n                  <LoadPage\n                    errorGoogleSignIn={this.errorGoogleSignIn}\n                    googleSignUp={this.googleSignUp}\n                    googleSignIn={this.googleSignIn}\n                    onSignIn={this.handleSignIn}\n                    onSignUp={this.handleSignUp}\n                    {...routeProps}\n                    unloggedUser={unloggedUser}\n                  />\n                ) : (\n                  <MainPage\n                    jobDetails={jobDetails}\n                    initialDetails={this.getInitialDetails}\n                    user={loggedInUser}\n                    logoutUser={logoutUser}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/search\"\n              render={(routeProps) => {\n                return (\n                  <SearchJob filteredJobs={filteredJobs} {...routeProps} />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/home\"\n              render={(routeProps) => {\n                return (\n                  <MainPage\n                    jobDetails={jobDetails}\n                    initialDetails={this.getInitialDetails}\n                    user={loggedInUser}\n                    logoutUser={logoutUser}\n                    {...routeProps}\n                    onUnlogged={this.handleUnloggedUser}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/home/:jobId\"\n              render={(routeProps) => {\n                return (\n                  <JobDescription\n                    handleDeleteAllJobSteps={this.handleDeleteAllJobSteps}\n                    handleDeleteJob={this.handleDeleteJob}\n                    handleDeleteStep={this.handleDeleteStep}\n                    handleSubmitStep={this.handleSubmitStep}\n                    steps={this.state.steps}\n                    user={loggedInUser}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/home/:jobId/edit\"\n              render={(routeProps) => {\n                return <EditJob />;\n              }}\n            />\n            <Route\n              path=\"/home/:jobId/steps\"\n              render={(routeProps) => {\n                return <ShowSteps user={loggedInUser} {...routeProps} />;\n              }}\n            />\n            <Route\n              path=\"/home/:jobId/create-steps\"\n              render={(routeProps) => {\n                return <CreateStep user={loggedInUser} {...routeProps} />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={(routeProps) => {\n                return (\n                  <Landing\n                    steps={this.state.steps}\n                    onDateFilter={this.handleDateFilter}\n                    oninterviewFilter={this.handleInterviewDate}\n                    onSalarySort={this.handleSalarySort}\n                    jobDetails={jobDetails}\n                    loggedInUser={loggedInUser}\n                    toLogIn={this.loggedIn}\n                    onAdd={this.addJobDetails}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n            <Route\n              path={\"/dashboard/:jobId\"}\n              render={(routeProps) => {\n                return (\n                  <Landing\n                    steps={this.state.steps}\n                    handleSubmitStep={this.handleSubmitStep}\n                    jobDetails={jobDetails}\n                    loggedInUser={loggedInUser}\n                    onAdd={this.addJobDetails}\n                    {...routeProps}\n                    isJobPreview\n                  />\n                );\n              }}\n            />\n            <Route\n              path=\"/profile\"\n              render={(routeProps) => {\n                return <Profile user={loggedInUser} {...routeProps} />;\n              }}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        }\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport './styles/Navigation.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}